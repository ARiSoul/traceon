// <auto-generated />
using System;
using Arisoul.Traceon.Maui.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Arisoul.Traceon.Maui.Infrastructure.Migrations
{
    [DbContext(typeof(TraceonDbContext))]
    [Migration("20250827203114_AddActionEntryFields")]
    partial class AddActionEntryFields
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("ActionTag", b =>
                {
                    b.Property<Guid>("ActionId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TagId")
                        .HasColumnType("TEXT");

                    b.HasKey("ActionId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("ActionTags", (string)null);
                });

            modelBuilder.Entity("Arisoul.Traceon.Maui.Core.Entities.ActionEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ActionId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ActionId");

                    b.ToTable("ActionEntries", (string)null);
                });

            modelBuilder.Entity("Arisoul.Traceon.Maui.Core.Entities.ActionEntryField", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ActionEntryId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ActionFieldId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("FieldDefinitionId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ActionEntryId");

                    b.HasIndex("ActionFieldId");

                    b.HasIndex("FieldDefinitionId");

                    b.ToTable("ActionEntryFields", (string)null);
                });

            modelBuilder.Entity("Arisoul.Traceon.Maui.Core.Entities.ActionField", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ActionId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("FieldDefinitionId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("MaxValue")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("MinValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ActionId");

                    b.HasIndex("FieldDefinitionId");

                    b.ToTable("ActionFields", (string)null);
                });

            modelBuilder.Entity("Arisoul.Traceon.Maui.Core.Entities.Audit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Entity")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EntityId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NewValues")
                        .HasColumnType("TEXT");

                    b.Property<string>("OldValues")
                        .HasColumnType("TEXT");

                    b.Property<string>("Operation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.Property<string>("User")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Audits");
                });

            modelBuilder.Entity("Arisoul.Traceon.Maui.Core.Entities.FieldDefinition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("DefaultDescription")
                        .HasColumnType("TEXT");

                    b.Property<bool>("DefaultIsRequired")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("DefaultMaxValue")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("DefaultMinValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("DefaultName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DropdownValues")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("FieldDefinitions", (string)null);
                });

            modelBuilder.Entity("Arisoul.Traceon.Maui.Core.Entities.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Tags", (string)null);
                });

            modelBuilder.Entity("Arisoul.Traceon.Maui.Core.Entities.TrackedAction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TrackedActions", (string)null);
                });

            modelBuilder.Entity("ActionTag", b =>
                {
                    b.HasOne("Arisoul.Traceon.Maui.Core.Entities.TrackedAction", "Action")
                        .WithMany("Tags")
                        .HasForeignKey("ActionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arisoul.Traceon.Maui.Core.Entities.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Action");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("Arisoul.Traceon.Maui.Core.Entities.ActionEntry", b =>
                {
                    b.HasOne("Arisoul.Traceon.Maui.Core.Entities.TrackedAction", "Action")
                        .WithMany("Entries")
                        .HasForeignKey("ActionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Action");
                });

            modelBuilder.Entity("Arisoul.Traceon.Maui.Core.Entities.ActionEntryField", b =>
                {
                    b.HasOne("Arisoul.Traceon.Maui.Core.Entities.ActionEntry", "ActionEntry")
                        .WithMany("Fields")
                        .HasForeignKey("ActionEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arisoul.Traceon.Maui.Core.Entities.ActionField", "ActionField")
                        .WithMany()
                        .HasForeignKey("ActionFieldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arisoul.Traceon.Maui.Core.Entities.FieldDefinition", "FieldDefinition")
                        .WithMany()
                        .HasForeignKey("FieldDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActionEntry");

                    b.Navigation("ActionField");

                    b.Navigation("FieldDefinition");
                });

            modelBuilder.Entity("Arisoul.Traceon.Maui.Core.Entities.ActionField", b =>
                {
                    b.HasOne("Arisoul.Traceon.Maui.Core.Entities.TrackedAction", "Action")
                        .WithMany("Fields")
                        .HasForeignKey("ActionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arisoul.Traceon.Maui.Core.Entities.FieldDefinition", "FieldDefinition")
                        .WithMany()
                        .HasForeignKey("FieldDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Action");

                    b.Navigation("FieldDefinition");
                });

            modelBuilder.Entity("Arisoul.Traceon.Maui.Core.Entities.ActionEntry", b =>
                {
                    b.Navigation("Fields");
                });

            modelBuilder.Entity("Arisoul.Traceon.Maui.Core.Entities.TrackedAction", b =>
                {
                    b.Navigation("Entries");

                    b.Navigation("Fields");

                    b.Navigation("Tags");
                });
#pragma warning restore 612, 618
        }
    }
}
